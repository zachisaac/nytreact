{"version":3,"sources":["Components/utils/helpers.js","Components/Children/Form.js","App.js","Components/Children/Results.js","Components/Children/Saved.js","serviceWorker.js","index.js"],"names":["axios","require","helpers","runQuery","topic","startYear","endYear","queryURL","get","then","response","newResults","fullResults","data","docs","counter","i","length","headline","main","pub_date","web_url","push","postArticle","title","date","url","post","results","console","log","module","exports","Form","state","handleChange","event","newState","target","id","value","_this","setState","handleClick","props","setTerm","react_default","a","createElement","className","type","onChange","this","required","onClick","React","Component","App","savedArticles","tpc","stYr","endYr","saveArticle","getArticle","deleteArticle","article","delete","_id","bind","Object","assertThisInitialized","componentDidUpdate","prevProps","prevState","componentDidMount","style","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","backgroundAttachment","color","textShadow","fontSize","Children_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b36cb30.chunk.js","sourcesContent":["// Include the axios package for performing HTTP requests (promise based alternative to request)\nvar axios = require('axios');\n\n// New York Times API\nvar nytAPI = \"097be422255e45a18b6864a8176f4a6c\";\n\n// Helper Functions\nvar helpers = {\n\n\trunQuery: function(topic, startYear, endYear){\n\n\t\t//Figure out the geolocation\n\t\tvar queryURL = \"https://api.nytimes.com/svc/search/v2/articlesearch.json?api-key=\" + nytAPI + \"&q=\" + topic + \"&begin_date=\" + startYear + \"0101&end_date=\" + endYear + \"0101\";\n\n\t\treturn axios.get(queryURL)\n\t\t\t.then(function(response){\n\n\t\t\t\tvar newResults = [];\n\t\t\t\tvar fullResults = response.data.response.docs;\n\t\t\t\tvar counter = 0;\n\n\t\t\t\t//Gets first 5 articles that have all 3 components\n\t\t\t\tfor(var i = 0; i < fullResults.length; i++){\n\n\t\t\t\t\tif(counter > 4) {\n\t\t\t\t\t\treturn newResults;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(fullResults[counter].headline.main && fullResults[counter].pub_date && fullResults[counter].web_url) {\n\t\t\t\t\t\tnewResults.push(fullResults[counter]);\n\t\t\t\t\t\tcounter++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn newResults;\n\t\t})\n\n\t},\n\n\n\t// This function posts saved articles to our database.\n\tpostArticle: function(title, date, url){\n\n\t\taxios.post('/api/saved', {title: title, date: date, url: url})\n\t\t.then(function(results){\n\n\t\t\tconsole.log(\"Posted to MongoDB\");\n\t\t\treturn(results);\n\t\t})\n\t}\n\n}\n\n\n// We export the helpers function (which contains getGithubInfo)\nmodule.exports = helpers;","// Include React \nimport React from 'react';\n\n// Component creation\nclass Form extends React.Component{\n\n\t// Here we set a generic state associated with the text being searched for\nstate = {\n\t\t\n\t\t\ttopic: \"\",\n\t\t\tstartYear: \"\",\n\t\t\tendYear: \"\"\n\t\t\n\t}\n\n\t// This function will respond to the user input \n\thandleChange =(event)=>{\n\n    \t// Here we create syntax to capture any change in text to the query terms (pre-search).\n    \tvar newState = {};\n    \tnewState[event.target.id] = event.target.value;\n    \tthis.setState(newState);\n\n\t}\n\n\t// When a user submits... \n\thandleClick = ()=> {\n\t\n\t\t// Set the parent to have the search term\n\t\tthis.props.setTerm(this.state.topic, this.state.startYear, this.state.endYear);\n\n\t}\n\n\t// Here we render the function\n\trender(){\n\n\t\treturn(\n\n\t\t\t<div className=\"panel panel-primary\">\n\t\t\t\t<div className=\"panel-heading\">\n\t\t\t\t\t<h2 className=\"panel-title text-center\"><strong>Search</strong></h2>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"panel-body text-center\">\n\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<h4 className=\"\"><strong>Topic</strong></h4>\n\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control text-center\" id=\"topic\" onChange= {this.handleChange} required/>\n\t\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t\t<h4 className=\"\"><strong>Start Year</strong></h4>\n\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control text-center\" id=\"startYear\" onChange= {this.handleChange} required/>\n\t\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t\t<h4 className=\"\"><strong>End Year</strong></h4>\n\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control text-center\" id=\"endYear\" onChange= {this.handleChange} required/>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={this.handleClick}>Search</button>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n};\n\n// Export the component back for use in other files\nexport default Form;","import axios from 'axios'\n\n// Include React \nimport React from 'react'\n\n// Here we include all of the sub-components\nimport Form from './Components/Children/Form';\nimport Results from './Components/Children/Results';\nimport Saved from './Components/Children/Saved';\n\n\n// Helper Function\nvar helpers = require('./Components/utils/helpers.js');\n\n\n// This is the main component. \nclass App extends React.Component {\n\n\t// Here we set a generic state associated with the number of click\n\t\tstate = {\n\t\t\ttopic: \"\",\n\t\t\tstartYear: \"\",\n\t\t\tendYear: \"\",\n\t\t\tresults: [],\n\t\t\tsavedArticles: []\n\t\t}\t\n\n\t// We use this function to allow children to update the parent with searchTerms.\n\tsetTerm = (tpc, stYr, endYr) =>{\n\t\tthis.setState({\n\t\t\ttopic: tpc,\n\t\t\tstartYear: stYr,\n\t\t\tendYear: endYr\n\t\t})\n\t}\n\n\tsaveArticle = (title, date, url) =>{\n\t\thelpers.postArticle(title, date, url);\n\t\tthis.getArticle();\n\t}\n\n\tdeleteArticle = (article) =>{\n\t\tconsole.log(article);\n\t\taxios.delete('/api/saved/' + article._id)\n\t\t\t.then(function(response){\n\t\t\t\tthis.setState({\n\t\t\t\t\tsavedArticles: response.data\n\t\t\t\t});\n\t\t\t\treturn response;\n\t\t\t}.bind(this));\n\n\t\tthis.getArticle();\n\t}\n\n\tgetArticle = () =>{\n\t\taxios.get('/api/saved')\n\t\t\t.then(function(response){\n\t\t\t\tthis.setState({\n\t\t\t\t\tsavedArticles: response.data\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t}\n\n\t// If the component updates we'll run this code\n\tcomponentDidUpdate =(prevProps, prevState) =>{\n\n\t\tif(prevState.topic != this.state.topic){\n\t\t\tconsole.log(\"UPDATED\");\n\n\t\t\thelpers.runQuery(this.state.topic, this.state.startYear, this.state.endYear)\n\t\t\t\t.then(function(data){\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tif (data != this.state.results)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tresults: data\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}.bind(this))\n\t\t}\n\t}\n\n\tcomponentDidMount = () =>{\n\t\taxios.get('/api/saved')\n\t\t\t.then(function(response){\n\t\t\t\tthis.setState({\n\t\t\t\t\tsavedArticles: response.data\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t}\n\n\t// Here we render the function\n\trender(){\n\t\treturn(\n\n\t\t\t<div className=\"container\">\n\n\t\t\t\t<div className=\"row\">\n\n\t\t\t\t\t<div className=\"jumbotron\" style={{'backgroundImage': 'url(./assets/images/newspaper.jpg)', 'backgroundRepeat': 'no-repeat', 'backgroundPosition': 'center', 'backgroundSize': '100% 100%', 'backgroundAttachment': 'fixed'}}>\n\t\t\t\t\t\t<h2 className=\"text-center\" style={{'color': 'white', 'textShadow': '3px 3px 10px black', 'fontSize': '54px'}}>New York Times Article Search and Save</h2>\n\t\t\t\t\t\t<p className=\"text-center\" style={{'color': 'white', 'textShadow': '3px 3px 10px black', 'fontSize': '24px'}}>Search for and save articles of interest!</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\n\t\t\t\t\t<Form setTerm={this.setTerm}/>\n\n\t\t\t\t</div>\n\n\t\t\t\t{/* <div className=\"row\">\n\t\t\t\n\t\t\t\t\t<Results results={this.state.results} saveArticle={this.saveArticle}/>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\n\t\t\t\t\t<Saved savedArticles={this.state.savedArticles} deleteArticle={this.deleteArticle} />\n\n\t\t\t\t</div> */}\n\t\t\t</div>\n\t\t)\n\t}\n};\n\nexport default App;","// Include React \nimport React from 'react'\n\n// Component creation\nclass Results extends React.Component{\n\n        state = {\n\t\t\ttitle: \"\",\n\t\t\tdate: \"\",\n\t\t\turl: \"\",\n\t\t\tresults: []\n\t\t}\n\n\n\t// When a user clicks save article\n\tclickToSave =(result)=>{\n\n\t\tthis.props.saveArticle(result.headline.main, result.pub_date, result.web_url);\n\n\t}\n\n\tcomponentWillReceiveProps = (nextProps)=>{\n\t\tvar that = this;\n\t\tvar myResults = nextProps.results.map(function(search, i){\n\t\t\tvar boundClick = that.clickToSave.bind(that, search);\n\t\t\treturn <div className=\"list-group-item\" key={i}><a href={search.web_url} target=\"_blank\">{search.headline.main}</a><br />{search.pub_date}<br /><button type=\"button\" className=\"btn btn-warning\" style={{'float': 'right', 'marginTop': '-39px'}} onClick={boundClick}>Save</button></div>\n\t\t});\n\n\t\tthis.setState({results: myResults});\n\t}\n\t\n\t// Here we render the function\n\trender(){\n\t\treturn(\n\n\t\t\t<div className=\"panel panel-warning\">\n\t\t\t\t<div className=\"panel-heading\">\n\t\t\t\t\t<h3 className=\"panel-title text-center\"><strong>Results</strong></h3>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"panel-body\">\n\t\t\t\t\t\t{this.state.results}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t)\n\t}\n};\n\n// Export the component back for use in other files\nexport default Results;","// Include React \nimport React from 'react';\n\n// This is the saved component. It will be used to show a log of saved articles.\nclass Saved extends React.Component{\n\n\n\t\tstate =  {\n\t\t\tsavedArticles: []\n\t\t}\n\n\n\tclickToDelete =(result)=>{\n\t\tthis.props.deleteArticle(result);\n\n\t}\n\n\tcomponentWillReceiveProps =(nextProps)=>{\n\t\tvar that = this;\n\t\tconsole.log(nextProps);\n\t\tvar myResults = nextProps.savedArticles.map(function(search, i){\n\t\t\tvar boundClick = that.clickToDelete.bind(that, search);\n\t\t\treturn <div className=\"list-group-item\" key={i}><a href={search.url} target=\"_blank\">{search.title}</a><br />{search.date}<br /><button type=\"button\" className=\"btn btn-success\" style={{'float': 'right', 'marginTop': '-39px'}} onClick={boundClick}>Delete</button></div>\n\t\t});\n\n\t\tthis.setState({savedArticles: myResults});\n\t}\n\n\t// Here we render the function\n\trender(){\n\n\t\treturn(\n\n\t\t\t<div className=\"panel panel-success\">\n\t\t\t\t<div className=\"panel-heading\">\n\t\t\t\t\t<h3 className=\"panel-title text-center\"><strong>Saved Articles</strong></h3>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"panel-body\">\n\n\t\t\t\t\t{/* Here we use a map function to loop through an array in JSX*/}\n\t\t\t\t\t{this.state.savedArticles}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t)\n\t}\n};\n\n\n\n// Export the component back for use in other files\nexport default Saved;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}